---
steps:
kind: pipeline
name: build
clone:
  depth: 1
volumes:
- name: gopath
  temp: {}
steps:
- name: download go modules
  image: golang:1.15.5
  commands:
  - go mod download
  volumes: &volumes
  - name: gopath
    path: /go
- name: durl
  image: golang:1.15.5
  commands:
  - bash scripts/durl.sh
  volumes: *volumes
- name: golangci-lint
  image: golangci/golangci-lint:v1.29.0-alpine
  commands:
  - golangci-lint run
  volumes: *volumes
- name: codecov
  image: golang:1.15.5
  commands:
  # bash and cgo seem to be required
  - bash scripts/codecov-test.sh
  - curl -s https://codecov.io/bash > /tmp/codecov.sh
  - test "$LOCAL" = "true" -o "$DRONE_BUILD_EVENT" = "pull_request" || bash /tmp/codecov.sh
  environment:
    CODECOV_TOKEN:
      from_secret: codecov_token
  volumes: *volumes
- name: remove changes
  image: &image_git plugins/git
  commands:
  # Sometimes it is failed to release by goreleaser due to changes of go.sum
  - git checkout -- .

- name: fetch tags to release
  image: *image_git
  commands:
  - git fetch --tags
  when:
    event:
    - tag
- name: release
  image: goreleaser/goreleaser:v0.147.0
  commands:
  - goreleaser release
  environment:
    GITHUB_TOKEN:
      from_secret: github_token
  volumes: *volumes
  when:
    event:
    - tag
- name: build and push docker
  image: plugins/docker:18.09.2
  settings:
    tags:
    - latest
    - "${DRONE_TAG##v}"
    repo: &docker_repo quay.io/suzuki_shunsuke/durl
    registry: &docker_registry quay.io
    username:
      from_secret: quayio_username
    password:
      from_secret: quayio_password
  when:
    event:
    - tag

- name: release (skip publish)
  image: goreleaser/goreleaser:v0.147.0
  commands:
  - goreleaser release --snapshot
  volumes: *volumes
  when:
    event:
    - pull_request
    - push
- name: build docker (not push)
  image: plugins/docker:18.09.2
  settings:
    repo: *docker_repo
    registry: *docker_registry
    dry_run: true
  when:
    event:
    - pull_request
    - push
