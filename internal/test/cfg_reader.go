package test

// Don't edit this file.
// This file is generated by gomic 0.5.2.
// https://github.com/suzuki-shunsuke/gomic

import (
	testing "testing"

	domain "github.com/suzuki-shunsuke/durl/internal/domain"
	gomic "github.com/suzuki-shunsuke/gomic/gomic"
)

type (
	// CfgReader is a mock.
	CfgReader struct {
		t                      *testing.T
		name                   string
		callbackNotImplemented gomic.CallbackNotImplemented
		impl                   struct {
			FindCfg func() (string, error)
			ReadCfg func(cfgPath string) (domain.Cfg, error)
			InitCfg func(cfg domain.Cfg) (domain.Cfg, error)
		}
	}
)

// NewCfgReader returns CfgReader .
func NewCfgReader(t *testing.T, cb gomic.CallbackNotImplemented) *CfgReader {
	return &CfgReader{
		t: t, name: "CfgReader", callbackNotImplemented: cb}
}

// FindCfg is a mock method.
func (mock CfgReader) FindCfg() (string, error) {
	methodName := "FindCfg" // nolint: goconst
	if mock.impl.FindCfg != nil {
		return mock.impl.FindCfg()
	}
	if mock.callbackNotImplemented != nil {
		mock.callbackNotImplemented(mock.t, mock.name, methodName)
	} else {
		gomic.DefaultCallbackNotImplemented(mock.t, mock.name, methodName)
	}
	return mock.fakeZeroFindCfg()
}

// SetFuncFindCfg sets a method and returns the mock.
func (mock *CfgReader) SetFuncFindCfg(impl func() (string, error)) *CfgReader {
	mock.impl.FindCfg = impl
	return mock
}

// SetReturnFindCfg sets a fake method.
func (mock *CfgReader) SetReturnFindCfg(r0 string, r1 error) *CfgReader {
	mock.impl.FindCfg = func() (string, error) {
		return r0, r1
	}
	return mock
}

// fakeZeroFindCfg is a fake method which returns zero values.
func (mock CfgReader) fakeZeroFindCfg() (string, error) {
	var (
		r0 string
		r1 error
	)
	return r0, r1
}

// ReadCfg is a mock method.
func (mock CfgReader) ReadCfg(cfgPath string) (domain.Cfg, error) {
	methodName := "ReadCfg" // nolint: goconst
	if mock.impl.ReadCfg != nil {
		return mock.impl.ReadCfg(cfgPath)
	}
	if mock.callbackNotImplemented != nil {
		mock.callbackNotImplemented(mock.t, mock.name, methodName)
	} else {
		gomic.DefaultCallbackNotImplemented(mock.t, mock.name, methodName)
	}
	return mock.fakeZeroReadCfg(cfgPath)
}

// SetFuncReadCfg sets a method and returns the mock.
func (mock *CfgReader) SetFuncReadCfg(impl func(cfgPath string) (domain.Cfg, error)) *CfgReader {
	mock.impl.ReadCfg = impl
	return mock
}

// SetReturnReadCfg sets a fake method.
func (mock *CfgReader) SetReturnReadCfg(r0 domain.Cfg, r1 error) *CfgReader {
	mock.impl.ReadCfg = func(string) (domain.Cfg, error) {
		return r0, r1
	}
	return mock
}

// fakeZeroReadCfg is a fake method which returns zero values.
func (mock CfgReader) fakeZeroReadCfg(cfgPath string) (domain.Cfg, error) {
	var (
		r0 domain.Cfg
		r1 error
	)
	return r0, r1
}

// InitCfg is a mock method.
func (mock CfgReader) InitCfg(cfg domain.Cfg) (domain.Cfg, error) {
	methodName := "InitCfg" // nolint: goconst
	if mock.impl.InitCfg != nil {
		return mock.impl.InitCfg(cfg)
	}
	if mock.callbackNotImplemented != nil {
		mock.callbackNotImplemented(mock.t, mock.name, methodName)
	} else {
		gomic.DefaultCallbackNotImplemented(mock.t, mock.name, methodName)
	}
	return mock.fakeZeroInitCfg(cfg)
}

// SetFuncInitCfg sets a method and returns the mock.
func (mock *CfgReader) SetFuncInitCfg(impl func(cfg domain.Cfg) (domain.Cfg, error)) *CfgReader {
	mock.impl.InitCfg = impl
	return mock
}

// SetReturnInitCfg sets a fake method.
func (mock *CfgReader) SetReturnInitCfg(r0 domain.Cfg, r1 error) *CfgReader {
	mock.impl.InitCfg = func(domain.Cfg) (domain.Cfg, error) {
		return r0, r1
	}
	return mock
}

// fakeZeroInitCfg is a fake method which returns zero values.
func (mock CfgReader) fakeZeroInitCfg(cfg domain.Cfg) (domain.Cfg, error) {
	var (
		r0 domain.Cfg
		r1 error
	)
	return r0, r1
}
